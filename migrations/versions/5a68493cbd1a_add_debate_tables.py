"""add debate tables

Revision ID: 5a68493cbd1a
Revises: dab68999fa28
Create Date: 2025-09-03 14:30:55.103714

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a68493cbd1a'
down_revision = 'dab68999fa28'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('debates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('pro_participant_id', sa.Integer(), nullable=True),
    sa.Column('con_participant_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('time_limit_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('current_deadline', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('current_round', sa.Integer(), nullable=True),
    sa.Column('current_turn', sa.String(length=10), nullable=True),
    sa.Column('need_sources', sa.Boolean(), nullable=True),
    sa.Column('allow_audience', sa.Boolean(), nullable=True),
    sa.Column('level_limit', sa.String(length=20), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['con_participant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pro_participant_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hall_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_debates', sa.Integer(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('ties', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('best_categories', sa.Text(), nullable=True),
    sa.Column('total_time_debating', sa.Integer(), nullable=True),
    sa.Column('average_response_time', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('arguments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('debate_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(length=10), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('sources', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('debate_follows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('debate_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'debate_id')
    )
    op.create_table('debate_ratings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('debate_id', sa.Integer(), nullable=False),
    sa.Column('judge_id', sa.Integer(), nullable=False),
    sa.Column('pro_score', sa.Integer(), nullable=False),
    sa.Column('con_score', sa.Integer(), nullable=False),
    sa.Column('winner', sa.String(length=10), nullable=True),
    sa.Column('logic_score_pro', sa.Integer(), nullable=True),
    sa.Column('logic_score_con', sa.Integer(), nullable=True),
    sa.Column('evidence_score_pro', sa.Integer(), nullable=True),
    sa.Column('evidence_score_con', sa.Integer(), nullable=True),
    sa.Column('presentation_score_pro', sa.Integer(), nullable=True),
    sa.Column('presentation_score_con', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.id'], ),
    sa.ForeignKeyConstraint(['judge_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('debate_ratings')
    op.drop_table('debate_follows')
    op.drop_table('arguments')
    op.drop_table('user_stats')
    op.drop_table('hall_messages')
    op.drop_table('debates')
    # ### end Alembic commands ###
